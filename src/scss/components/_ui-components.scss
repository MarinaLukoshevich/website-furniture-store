@import "../vars.scss";
@import "../mixins.scss";
@import "../fonts.scss";


// SVG
.icon {
  transition: fill $tr;
}

.soc-svg,
.close-svg {
  fill: $grey;
}

.user-svg,
.basket-svg,
.drop-arrow-svg {
  fill: $primary;
}


// icon::hov,foc,active (close,soc,user,basket)
@mixin iconState() {
  &:hover {
    .icon {
      fill: $primary;
    }
  }

  &:focus-visible:not(:hover):not(:active) {
    &:after {
      opacity: 1;
    }

    .icon {
      fill: $white;
    }
  }

  &:active {
    &:after {
      opacity: 0;
    }

    .icon {
      fill: $primary-s;
    }
  }

}

.arrow-disab {
  cursor: auto;

  .arrow-svg {
    .circle {
      stroke: $grey;
    }

    .path {
      stroke: $grey;
    }
  }
}

.arrow-svg {
  .circle {
    fill: transparent;
    stroke: $primary;
    transition: $tr;
    transition-property: stroke, fill;
  }

  .path {
    stroke: $primary;
    transition: stroke $tr;
  }
}

//arrow-svg::hover
@mixin arrow-svgH() {
  .arrow-svg {
    .circle {
      fill: $primary;
    }

    .path {
      stroke: $white;
    }
  }
}

//arrow-svg::focus
@mixin arrow-svgF() {
  .arrow-svg {
    .circle {
      fill: $primary-l;
    }

    .path {
      stroke: $white;
    }
  }
}

//arrow-svg::active
@mixin arrow-svgA() {
  .arrow-svg {
    .circle {
      stroke: $primary-s;
      fill: $primary-s;
    }

    .path {
      stroke: $white;
    }
  }
}









// BUTTON
.btn {
  border: $bor-2;
  border-radius: $r-10;
  font-size: 16px;
  line-height: 16px;
  transition: $tr;
  transition-property: background-color, border-color, color;

  &:active {
    border-color: $primary-s;
    color: $white;
    background-color: $primary-s;
  }
}

.btn-stroke {
  padding: 19px 35px;
  border-color: $primary;
  font-weight: 600;
  color: $primary;

  // &:hover:not(:active) {
  &.hover.touch:not(:active) {
    color: $white;
    background-color: $primary;
  }

  &:focus-visible:not(.touch):not(:active) {
    border-color: $primary;
    color: $white;
    background-color: $primary-l;
  }
}

.btn-bg {
  padding: 22px 47px;
  font-weight: 700;
  color: $white;
  background-color: $primary;

  &:hover:not(:active) {
    background-color: $primary-l;
  }

  &:focus-visible:not(:hover):not(:active) {
    border-color: $primary-s;
    background-color: $primary-l;
  }
}

.btn-disab {
  padding: 22px 47px;
  border: $bor-2;
  border-radius: $r-10;
  font: 700 16px / 16px $font-f;
  font-weight: 700;
  color: $grey;
  background-color: $grey-md;
  cursor: auto;
}

.btn-pagin {
  padding: 8px 11px;
}

.btn-close {
  @include flex-xy-center;
  width: 16px;
  height: 16px;
  @include iconState();
  transition: background-color $tr;

  &:focus-visible:not(:hover):not(:active) {
    background-color: $pink-v;

    .icon {
      fill: $primary-s;
    }
  }
}

.swiper-arrows {
  @include flex-y-center;
  gap: 30px;

  .swiper-button-prev,
  .swiper-button-next {
    position: relative;
    width: 32px;
    height: 32px;
    border: $bor-2;
    border-color: $primary;
    border-radius: 50%;
    background-color: transparent;
    transition: $tr;
    transition-property: background-color, border-color;

    &::after {
      display: none;
    }

    &::before {
      content: "";
      position: absolute;
      width: 9px;
      height: 9px;
      border: $bor-2;
      border-color: $primary;
      transform: rotate(45deg);
      transform-origin: center;
      transition: $tr border-color;
    }

    &:hover {
      background-color: $primary;

      &::before {
        border-color: $white;
      }
    }

    &:focus-visible:not(:active):not(:hover) {
      background-color: $primary-l;

      &::before {
        border-color: $white;
      }
    }

    &:active {
      border-color: $primary-s;
      background-color: $primary-s;

      &::before {
        border-color: $white;
      }
    }

    &.swiper-button-disabled {
      border-color: $grey;
      opacity: 1;

      &::before {
        border-color: $grey;
      }
    }
  }

  .swiper-button-prev {
    &::before {
      right: 8px;
      border-top: none;
      border-right: none;
    }
  }

  .swiper-button-next {
    &::before {
      left: 8px;
      border-bottom: none;
      border-left: none;
    }
  }
}

// BTN-WRAP in hero & banner
.btn-fromMob {
  display: none;
}








// INPUT
.input {
  font-family: $font-f;
  font-size: 16px;
  color: $black;
  transition: $tr;
  transition-property: background-color, border-color;
}

.checkbox {
  user-select: none;
  cursor: pointer;

  &__input {
    position: absolute;
    appearance: none; //скрыть defolt checkbox

    &:checked+.checkbox__span::before {
      background-image: url('../../img/checkbox-on.svg');
    }

    &:hover+.checkbox__span {
      color: $grey;
    }

    &:focus-visible:not(:hover)+.checkbox__span {
      color: $primary;
    }
  }

  &__span {
    position: relative;
    padding-left: 32px;
    font-size: 16px;
    line-height: 21px;
    color: $grey-s;
    transition: color $tr;

    &::before {
      content: "";
      position: absolute;
      left: 0;
      top: 1px;
      width: 20px;
      height: 20px;
      background: url('../../img/checkbox.svg') no-repeat center / cover;
      transition: background-image $tr;
    }
  }
}









// LINK
.main-link,
.sec-link,
.to-link {
  transition: color $tr;

  &:hover {
    color: $primary;
  }

  &:active {
    color: $primary-s;
  }
}

.sec-link,
.main-link {
  position: relative;
  @include clickZoneX-7;

  &:focus-visible:not(:hover):not(:active) {
    &::after {
      opacity: 1;
    }
  }
}

.sec-link {
  color: $grey;

  &:focus-visible:not(:hover):not(:active) {
    color: $primary-s;
  }
}

.main-link {
  font-size: 16px;
  line-height: 22px;

  &:focus-visible:not(:hover):not(:active) {
    color: $black;
  }
}

.to-link {
  @include flex-y-center;
  gap: 5px;
  font: 700 16px / 19px $font-f;
  color: $primary;

  &__text {
    position: relative;
    @include borderBot;
  }

  .arrow-svg {
    width: 22px;
    height: 22px;
  }

  &:hover,
  &:focus-visible:not(:active) {
    .to-link__text {
      &::after {
        background-color: $primary;
      }
    }
  }

  &:hover {
    @include arrow-svgH;
  }

  &:focus-visible:not(:active) {
    @include arrow-svgF;
  }

  &:active {
    color: $primary-s;

    .to-link__text {
      &::after {
        background-color: $primary-s;
      }
    }

    @include arrow-svgA;
  }
}

.phone-link {
  @include flex-y-center;
  color: $orange;
  background-color: transparent;
  transition: $tr;
  transition-property: background-color, color;

  .phone-svg {
    fill: $orange;
    transition: fill $tr;
  }

  &:hover {
    color: $orange-l;

    .phone-svg {
      fill: $orange-l;
    }
  }

  &:focus-visible:not(:hover):not(:active) {
    color: $orange;
    background-color: $bone;

    .phone-svg {
      fill: $orange;
    }
  }

  &:active {
    color: $orange-s;
    background-color: transparent;

    .phone-svg {
      fill: $orange-s;
    }
  }
}

// link in section product
.add-to-basket {
  font: 400 16px / 21px $font-f;
  color: $primary;
  transition: color $tr;

  &:hover,
  &:focus-visible {
    color: $primary-l;
  }

  &:active {
    color: $primary-s;
  }
}







.soc {
  @include flex-y-center;
  gap: 20px;

  &__item {
    &-link {
      position: relative;
      @include flex-xy-center;
      height: 30px;
      @include iconState;
      @include clickZone-3;
    }
  }
}

.userBasket {
  @include flex-y-center;
  gap: 30px;

  &__item {
    .userBasket-link {
      position: relative;
      @include flex-xy-center;
      @include iconState;
      @include clickZone-3;

      &:hover {
        .icon {
          fill: $primary-l;
        }
      }

      &:active {
        .icon {
          fill: $primary-s;
        }
      }
    }

    &:nth-child(1) {
      .userBasket-link {
        width: 28px;
        height: 30px;
      }
    }

    &:nth-child(2) {
      .userBasket-link {
        width: 43px;

        .basket-wrap {
          position: relative;
          display: flex;
          justify-content: flex-end;
          width: 41px;

          .basket-count {
            content: '';
            position: absolute;
            top: 5px;
            left: 0;
            @include flex-xy-center;
            border-radius: 100%;
            width: 14px;
            height: 15px;
            color: $white;
            font: 700 10px / 10px $font-f;
            background-color: $orange;
          }
        }
      }
    }

  }
}

.route {
  @include flex-y-center;
  gap: 6px;
  margin-bottom: 32px;
  margin-top: -9px;

  &__item {
    .slash {
      color: $grey;
    }
  }
}





// CARD
.disc-card,
.catalog-card,
.cat-card {
  position: relative;
  @include flexC;
}

.disc-card,
.catalog-card {
  justify-content: flex-end;
  gap: 16px;
  border-radius: $r-10;
  background-color: $grey-l;

  &::after {
    content: '!';
  }

  .picture {
    @include flex-xy-center;
    width: 100%;
  }
}

.disc-card {
  padding: 62px 20px 30px;
  @include discount;

  .picture {
    height: 100%;

    img {
      max-height: 218px;
    }
  }

  &__wrap-text {
    @include flexC;
    gap: 21px;
    padding-left: 10px;
    max-width: 235px;

    .price {
      position: relative;
      font-size: 18px;
      line-height: 23.5px;
      color: $orange;
      @include priceInitial;

      &::after {
        content: '00 000 руб';
      }
    }
  }

  &.card-draw {
    padding: 30px 20px;

    .disc-card__wrap {
      @include flex-end-space;
      width: 100%;
    }
  }
}

.catalog-card {
  padding: 30px 15px;
  min-height: 420px;
  @include starReting;

  &__wrap-text {
    @include flexC;
    gap: 21px;
    padding: 0 15px;

    .price {
      font: 400 16px / 21px $font-f;
      color: $grey;
    }
  }
}

.cat-card {
  gap: 14px;
  padding: 30px;
  min-height: 200px;
  background: url('../../img/cat2.png') no-repeat left center / contain;
  @include bgColor;

  &::after {
    border-radius: $r-10;
    left: 0;
    right: 0;
  }

  .list {
    display: flex;
    gap: 30px;
  }

  .card-wrap {
    @include flexC;
    height: 100%;

    .title3 {
      line-height: 32.5px;
    }

    .to-link {
      margin-top: auto;
    }
  }
}

.useful-card {
  @include flexC;
  gap: 38px;
  padding: 456px 30px 30px 30px;
  border-radius: $r-10;
  max-width: 624px;
  background-color: $grey-l;

  .text {
    font-size: 24px;
    line-height: 32.5px;
  }

  .btn-stroke {
    margin-top: auto;
  }
}

.product-card {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 32px;
  row-gap: 113px;
  margin-bottom: 82px;

  .picture {
    align-self: center;
  }

  .model {
    position: relative;
    @include flexC;
    gap: 21px;
    padding-top: 21px;
    @include starReting;

    &::after {
      content: '!';
      top: 0;
      left: 0;
    }

    .titleDescr {
      &__title3 {
        margin-bottom: 5px;
      }

      .descr {
        color: $grey;
      }
    }

    .price {
      font-size: 38px;
      line-height: 47px;
    }

    .links {
      @include flexC-x-center;
      gap: 12px;

      a {
        text-align: center;

        &.btn-bg {
          padding: 18px 30px;
        }
      }
    }

  }

  .descrip,
  .character {
    line-height: 25px;
  }

  .descrip {
    @include flexC;
    justify-content: space-between;
    gap: 32px;

    &__text {
      .title4 {
        margin-bottom: 8px;
      }

      p:not(:last-child) {
        margin-bottom: 8px;
      }
    }

    &__draw {
      @include flex-y-center;
      gap: 32px;

      img {
        min-width: 247px;
      }
    }
  }

  .character {
    &-list {
      .item {
        @include flex-y-center;

        &__main {
          position: relative;
          flex-basis: 52.5%;
          color: $grey;
          white-space: nowrap;
          overflow: hidden;

          &::after {
            content: '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .';
            position: absolute;
            bottom: 0;
          }

        }
      }
    }
  }
}



// automatic installation rating for 12 cards
.rating {

  @each $selector,
  $starReting in ('.card1' :'5,0',
    '.card2' :'4.9',
    '.card3' :'4,8',
    '.card4' :'4,8',
    '.card5' :'4,8',
    '.card6' :'4,8',
    '.card7' :'4,8',
    '.card8' :'4,7',
    '.card9' :'4,7',
    '.card10': '4.6',
    '.card11': '4.5',
    '.card12': '4.5',
  ) {
    #{$selector} {
      &::after {
        content: $starReting;
      }
    }
  }

}
